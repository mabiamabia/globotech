-------------JAVASCRIPT--------------
VARIÁVEIS

var (sobrescreve - ñ é mais usado)
let firstName;
const temperature = 28.4;
const likeGames = true;
var nome = "José"

firstName = "José Claudio";
console.log(firstName)
console.log(nome, typeof nome)

const person = {
    name: 'Jose',
    birthday: new Date(1991, 8, 24),
    endereco: {
        rua: 'Rua Tal',
        complemento: 'Longe de tudo e perto de porto'
    }
}

console.log(person)
person.name = 'Zezinho'
console.log(person.birthday.getDay())

---------------------------------------------

person['nickname'] = 'SilentStorm'
console.log(person)

const personJson.stringify(person);

console.log(personJson)
console.log(typeof person, typeof (personJson))

----------------------------------------------------
---------------- ARRAY - MAP - SET -----------------
----------------------------------------------------

let marvelMovies = ['blade', 'spider man','Xmen']

console.table(marvelMovies)
console.table(typeof marvelMovies)

console.log(marvelMovies[2].name.teste) 
console.log(marvelMovies[2].toLowerCase()) 
console.log(marvelMovies[2].trim()) 

marvelMovies[3] = 'Doutor Estranho'
marvelMovies.push('Avengers') //push adiciona ao final da lista
console.table(marvelMovies, marvelMovies.length)

----------------------------------------------------
const persons = [luke, leia, obiwan]
const obiwan = {
    fisrtName: 'Obi-Wan',
    lastName: 'Kenobi',
    birthday: new Date(1970, 5, 10),
    jedi: true
}


------------------
callback = comportamento para chamar uma função

function logar(personagem) {
    console.log(personagem.firstName)
}
persons.forEach(logar)

************ARROW FUNCTIONS***************

const logarNovo = (personagem) => {
    console.log(personagem.firstName)
}
persons.forEach(logar)

------------CLASSES-------------

class Client {
    constructor(firstName, lastName, email, phoneNumber) {
        this.fisrtName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.phoneNumber = phoneNumber;
    }
}

const jose = new Client('jose','silva','jose@email.com','1923478376')

console.log(jose.email)

--------------------------------

const luke = {
    firstName: 'Luke',
    lastName: 'Skywalker',
    birthDay: new Date(1991, 8, 24),
    jedi: true
}

const leia = {
    firstName: 'Leia',
    lastName: 'Organa',
    birthDay: new Date(2001, 3, 1),
    jedi: false
}

const obiwan = {
    firstName: 'Obi-Wan',
    lastName: 'Kenobi',
    birthDay: new Date(1970, 5, 10),
    jedi: true
}

const persons = [luke, leia, obiwan]
console.table(persons)

console.log("<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>")

for (let i = 0; i < persons.length; i++) {
    // console.log(persons[i])
}

for (const person of persons) {
    // console.log(person)
}

for (const indice in persons) {
    // console.log(persons[indice])
}

const dicionario = new Map()
dicionario.set('leia', leia)
dicionario.set('luke', luke)
dicionario.set('obiwan', obiwan)

// console.log(dicionario)

for (const [chave, valor] of dicionario) {
    // console.log(chave, valor)
}

let contador = 0

while(contador < 5) {
    console.log('contador while', contador)
    contador++;
}

contador = 0

do {
    console.log('contador do while', contador)
    contador++;
} while(contador > 5)

// controls

const nota = 2

if (nota >= 8) {
    console.log('Passou topado')
} else if (nota >= 6 && nota < 8) {
    console.log('Ta safe')
} else {
    console.log('Lascou-se')
}

// Switch

const dataAtual = new Date()

switch(/* can be a expression */dataAtual.getDay()) {
    case 0:
        console.log("Domingo")
        break;
    case 1:
        console.log("Segunda")
        break;
    case 2:
        console.log("Terça")
        break;
    case 3:
        console.log("Quarta")
        break;
    case 4:
        console.log("Quinta")
        break;
    case 5:
        console.log("Sexta")
        break;
    case 6:
        console.log("Sábado")
        break;
    default:
        console.log("Não conheço esse dia")
}

-------------------------------------------------

class Client {
    
    constructor(firstName, lastName, email, phoneNumber) {
        this.firstName = firstName;
        this.lastName = lastName;
        this._email = email;
        this.phoneNumber = phoneNumber;
    }

    getFullName() {
        return `${this.firstName} ${this.lastName}`
    }

    static buildSimpleClient(firstName, phoneNumber) {
        return new Client(firstName, null, null, phoneNumber);
    }

    get email() {
        return this._email.toUpperCase()
    }

    set email(novoEmail) {
        this._email = novoEmail.trim()
    }

}

const jose = new Client('Jose', 'Silva', 'jose@email.com', '8181818');

console.log(jose)
console.log(jose.email)

jose.email = 'novoemail@email.com'

console.log(jose.email)
console.log(jose.getFullName())

const maria = Client.buildSimpleClient('Maria', '3343455');

console.log(maria)

/*
function soma(a, b) {
    return a + b
}

console.log(soma(4, 6))
*/

function construirNovoCliente(firstName, lastName) {
    return new Client(firstName, lastName);
}

const joao = construirNovoCliente('Joao', 'Silva')

console.log(joao)












